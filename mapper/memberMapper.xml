<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper    PUBLIC "=//mybatis.org//DTD Mapper 3.0..EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="yolijolicook.MemberMapper">

   <!-- 회원가입 -->
   <insert id="insertMember" parameterType="Member">
      INSERT INTO member(member_id, member_pwd, member_email, member_nickname, member_dt)
      VALUES(#{member_id}, #{member_pwd}, #{member_email}, #{member_nickname}, SYSDATE)
   </insert>
   
   <!-- 로그인 -->
   <select id="login" parameterType="map" resultType="Member">
      SELECT * FROM member WHERE member_id = #{member_id} AND member_pwd = #{member_pwd}
   </select>
   
   <!-- 아이디 중복체크 -->
   <select id="selectById" parameterType="string" resultType="string">
      SELECT member_id FROM member WHERE member_id = #{member_id}
   </select>
   
   <!-- 닉네임 중복체크-->
   <select id="selectByNickname" parameterType="string" resultType="string">
      SELECT member_nickname FROM member WHERE member_nickname = #{member_nickname}
   </select>
   
   <!-- 이메일 중복체크-->
   <select id="selectByEmail" parameterType="string" resultType="string">
      SELECT member_email FROM member WHERE member_email = #{member_email}
   </select>
   
   <!-- 아이디 찾기 -->
   <select id="selectFindId" parameterType="string" resultType="Member">
      SELECT member_id FROM member WHERE member_email = #{member_email}
   </select>
   
   <!-- 비밀번호 찾기 -->
   <select id="selectFindPwd" parameterType="string" resultType="Member">
      SELECT member_pwd FROM member WHERE member_id = #{member_id} AND member_email = #{member_email}
   </select>
   
   <!-- 현재 비밀번호 확인 -->
   <select id="selectByPwd" parameterType="string" resultType="Member">
      SELECT member_id FROM member WHERE member_id = #{member_id} and member_pwd = #{member_email}
   </select>
   
   <!-- 닉네임 수정 -->
   <update id="updateNickname" parameterType="string">
      UPDATE member SET member_nickname = #{member_nickname} WHERE member_id = #{member_id}
   </update>
   
   <!-- 비밀번호 수정 -->
   <update id="updatePwd" parameterType="string">
      UPDATE member SET member_pwd = #{member_pwd} WHERE member_id = #{member_id}
   </update>
   
   <!-- 회원탈퇴 -->
   <delete id="deleteMember" parameterType="Member">
      DELETE member WHERE member_id = #{member_id}
   </delete>
   
   <!-- 나의 레시피 보기 -->
   <select id="selectMyRecipe" parameterType="string" resultType="Member">
      SELECT info.recipe_no,info.recipe_name, info.recipe_img, info.recipe_scrap_cnt, info.recipe_cnt, info.recipe_dt
      FROM recipe_info info JOIN member mem ON info.member_id = mem.member_id WHERE mem.member_id = #{mem.member_id} AND info.recipe_status = 1
      ORDER BY info.recipe_dt desc
   </select>
   
   <!-- 나의 레시피 요청사항 -->
   <select id="selectRequestRecipe" parameterType="string" resultType="Member">
      SELECT info.recipe_no,info.recipe_name, info.recipe_img, info.recipe_dt, info.recipe_status                   
      FROM recipe_info info JOIN member mem ON info.member_id = mem.member_id                   
      WHERE mem.member_id = #{mem.member_id} AND (info.recipe_status = 0 OR info.recipe_status = -1)  ORDER BY info.recipe_dt desc                  
   </select>
   
   <!-- 내가 찜한 레시피 -->
   <select id="selectScrapRecipe" parameterType="string" resultType="Member">
      SELECT info.recipe_no,sc.scrap_no,info.recipe_name, info.recipe_img,mem.member_nickname
      FROM recipe_info info JOIN scrap sc ON info.recipe_no = sc.recipe_no JOIN member mem ON info.member_id = mem.member_id
      WHERE sc.member_id = #{sc.member_id} ORDER BY info.recipe_dt desc
   </select>
   
   <!-- 찜한 레시피 해제 -->
   <delete id="deleteScrapRecipe" parameterType="Member">
      DELETE FROM scrap sc WHERE sc.scrap_no = #{sc.scrap_no}
   </delete>
   
   <!-- 내가 쓴 게시글 보기 -->
   <select id="selectMyBoard" parameterType="string" resultType="Member">
      SELECT board_title,board_dt,board_cnt FROM BOARD WHERE member_id = #{member_id} ORDER BY board_dt desc
   </select>
   
   <!-- 내가 쓴 신고 보기 -->
   <select id="selectMyReport" parameterType="string" resultType="Member">
      SELECT report_title, report_dt, report_status FROM report  WHERE member_id = #{member_id} ORDER BY report_dt desc
   </select>
   
   <!-- 내가 쓴 문의 보기 -->
   <select id="selectMyQNA" parameterType="string" resultType="Member">
      SELECT question_title, question_dt, question_ans_detail, question_ans_dt
      FROM QNA
      WHERE member_id = #{member_id} ORDER BY question_dt desc
   </select>
   
   <!-- 문의하기 -->
   <insert id="insertQNA" parameterType="Member">
      INSERT INTO qna (question_no, question_title, question_detail, member_id ,question_dt)
      VALUES(SEQ_QNA.NEXTVAL, #{question_title}, #{question_detail}, #{member_id}, SYSDATE)
   </insert>
   
   <!-- 문의 디테일 -->
   <select id="selectQNA" parameterType="string" resultType="Member">
      SELECT question_title,question_detail,member_id, question_dt, question_ans_dt, question_ans_detail
      FROM QNA WHERE question_no = #{question_no}
   </select>
   
   <!-- 문의 삭제하기 -->   
   <delete id="deleteQNA" parameterType="Member">
      DELETE FROM QNA WHERE question_no = #{question_no}
   </delete>
   
   <!-- 내가 쓴 게시글 댓글 -->
   <select id="selectMyBoardCmt" parameterType="string" resultType="Member">
      SELECT bd.board_title,cmt.boardcmt_detail,cmt.boardcmt_dt
      FROM board bd JOIN board_comment cmt ON bd.board_no =  cmt.board_no
      WHERE cmt.member_id = #{cmt.member_id} ORDER BY cmt.boardcmt_dt desc
   </select>
   
   <!-- 내가 쓴 레시피 댓글 -->
   <select id="selectMyRecipeCmt" parameterType="string" resultType="Member">
      SELECT info.recipe_img, info.recipe_name, cmt.recipecmt_detail, cmt.recipecmt_dt, mem.member_nickname
      FROM recipe_info info JOIN recipe_comment cmt ON info.recipe_no = cmt.recipe_no JOIN member mem ON mem.member_id = info.member_id
      WHERE cmt.member_id = #{cmt.member_id} ORDER BY cmt.recipecmt_dt desc
   </select>
   
</mapper>